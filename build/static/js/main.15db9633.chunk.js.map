{"version":3,"sources":["components/About/About.js","components/Game/PreGame.js","components/Game/GameQuestion.js","components/Game/Socket.js","components/Game/GetName.js","components/Game/DuringGame.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","to","PreGame","props","useState","includeFamily","setIncludeFamily","questionString","setQuestionString","useEffect","toAdd","length","questionToAdd","Math","floor","random","includes","push","join","onClick","type","name","checked","onChange","e","prevIF","GameQuestion","yanswer","setYAnswer","index","oright","setOright","changeO","target","value","toString","changeOright","question","split","other","placeholder","changeAnswer","persist","id","answer","disabled","Socket","state","socket","room","socketio","socketIOClient","username","this","emit","on","data","console","log","i","users","setScore","prevScore","nArr","setInterval","setQuest","prevQuest","text","total","setState","disconnect","React","Component","GetName","setName","setScoreBoard","nScore","setHaveName","DuringGame","quest","scoreboard","haveName","done","setDone","questionBank","questions","match","params","gameId","map","num","nYAnswer","prevVal","userAnswer","string","prevAnswer","newArr","userOAnswer","item","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15db9633.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function About(){\n    return(\n        <div className=\"rounded bg-blue-500 md:w-1/2 p-4 space-y-5 m-2\">\n            <div className=\"space-y-2\">\n                <h1 className=\"text-3xl\">About</h1>\n                <p className=\"text-xl \">This is a project to try to show my ablility to make simple programs using react, express, socketio, linux, tailwindcss</p>\n            </div>\n            <div className=\"space-y-2\">\n                <h1 className=\"text-3xl\">Developer Information</h1>\n                <p className=\"text-xl\">Bio: My name is David Masaka. I am a student at Penn State taking computer science</p>\n            </div>\n            <div className=\"bg-green-500 rounded text-2xl py-2 px-4 hover:bg-green-600\">\n                <Link to=\"/game\">Go to Game</Link>\n            </div>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction PreGame(props) {\n    const [includeFamily, setIncludeFamily] = useState(false)\n    const [questionString, setQuestionString] = useState(\"1-2-3-4-5\")\n    useEffect(() => {\n        if (includeFamily){\n            const toAdd = []\n            while (toAdd.length < 5){\n                const questionToAdd = Math.floor(Math.random() * 41)\n                if (!toAdd.includes(questionToAdd)) toAdd.push(questionToAdd);\n            }\n            while (toAdd.length < 6){\n                const questionToAdd = Math.floor(Math.random() * 8 + 34)\n                if (!toAdd.includes(questionToAdd)) toAdd.push(questionToAdd);\n            }\n            setQuestionString(\"/game/\" + toAdd.join(\"-\"))\n        }else{\n            const toAdd = []\n            while (toAdd.length < 6){\n                const questionToAdd = Math.floor(Math.random() * 34)\n                if (!toAdd.includes(questionToAdd)) toAdd.push(questionToAdd);\n            }\n            setQuestionString(\"/game/\" + toAdd.join(\"-\"))\n        }\n    }, [includeFamily])\n\n    function changeFamily(e){\n        setIncludeFamily(prevIF => !prevIF)\n    }\n\n    return(\n        <div className=\"flex flex-col items-center space-y-2 m-4\">\n            <div className=\"bg-green-500 rounded p-5 space-y-2 md:w-1/2\">\n                <h1 className=\"text-3xl\">Game Legend</h1>\n                <p>\n                    This game was created by living in my mom's basement till age 30 unfortunately most of the\n                    design elements were lost. When I went to join a growing startup called wework to help them \n                    with their expansion in 2019. Which is why the sight looks the way it does.\n                </p>\n                <h1 className=\"text-3xl\">What is Known</h1>\n                <p> \n                    To play this game choose if you want family questions click the link then send the link to your friend and finally choose your nickname .\n                    You and your friend will be shown the questions and you will both answer and access the others person's answer and see how many you each get right.\n                    If you are testing this you can open the same link in a different tab.\n                </p>\n            </div>\n            <div className=\"bg-pink-300 rounded flex flex-col items-center space-x-4 p-3 md:w-1/2 w-full text-xl\">\n                <div onClick={includeFamily}>\n                    <input type=\"checkbox\" name=\"includeFamily\" checked={includeFamily} onChange={changeFamily}/>\n                    <label> Include Family Questions</label>\n                </div>\n                <div className=\"bg-green-500 rounded text-2xl py-2 px-4\">\n                    <Link to={questionString}>Start Game</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PreGame","import React, {useState} from 'react'\n\nfunction GameQuestion(props){\n    const [yanswer, setYAnswer] = useState(\"\")\n    const [oright, setOright] = useState(props.yanswer[props.index].oright)\n\n    let changeA = e => {\n        setYAnswer(e.target.value)\n        props.changeAnswer(e.target.value, props.index)\n        e.persist()\n    }\n\n    let changeO = e => {\n        if(e.target.value !== oright.toString()){\n            setOright(!oright)\n            props.changeOright(e.target.value, props.index)\n        }\n    }\n\n    return(\n        <div className=\"bg-blue-500 rounded-lg md:w-2/5 xl:w-1/4 p-4 border-white flex flex-col\">\n            <div>\n                <h3 className=\"m-1 text-xl\">{props.question.split(\"*\").join(props.other)}</h3>\n            </div>\n            <div className=\"\">\n                <textarea placeholder=\"Type your answer here\" value={yanswer} className=\"p-2 m-1 w-full rounded-md h-40\" onChange={changeA}>\n                </textarea>\n                <textarea id=\"other\" placeholder=\"Their Answer Here\" value={props.answer} className=\"p-2 m-1 w-full rounded-md h-40\" disabled>\n                </textarea>\n            </div>\n            <div className=\"flex flex-row space-x-2\">\n                <button className={\"w-1/2 rounded \" + (oright ? \"bg-green-500 \" : \"bg-green-200 \")} value=\"true\" onClick={changeO}>✓</button>\n                <button className={\"w-1/2 rounded \" + (oright ? \"bg-red-200 \" : \"bg-red-500 \")} value=\"false\" onClick={changeO}>X</button>\n            </div>\n        </div>\n    )\n}\n\nexport default GameQuestion","import React from 'react'\nimport socketIOClient from 'socket.io-client'\n\nclass Socket extends React.Component{\n    state = {\n        socket: null,\n        name: this.props.name,\n        room: this.props.room,\n    }\n\n    componentDidMount(){\n        const socketio = socketIOClient()\n        const username = this.state.name\n        const room = this.state.room\n        socketio.emit('joinChat', {username, room})\n        socketio.on('users', data => {\n            console.log(data)\n            for (let i = 0; i < data.users.length; i++){\n                if(data.users[i].username !== username){\n                    this.props.setScore(prevScore => {\n                        const nArr = [...prevScore]\n                        nArr[1] = data.users[i].username\n                        return nArr\n                    })\n                }\n            }\n        })\n        setInterval(() => {\n            const answer = this.props.yanswer\n            socketio.emit(\"clientMessage\", { answer })\n        }, 5000)\n        socketio.on(\"hostMessage\", data => {\n            this.props.setQuest(prevQuest => {\n                const nArr = [...prevQuest]\n                for(let i = 0; i < data.text.answer.length; i++){\n                    nArr[i]['answer'] = data.text.answer[i]['answer']\n                }\n                return nArr\n            })\n            let total = 0\n            for (let i = 0; i < data.text.answer.length; i++){\n                total += data.text.answer[i].oright ? 1 : 0\n            }\n            this.props.setScore(prevScore => {\n                const nArr = [...prevScore]\n                nArr[2] = total\n                return nArr\n            })\n        })\n        this.setState({ socket: socketio })\n    }\n\n    componentWillUnmount(){\n        if (this.state.socket != null){\n            this.state.socket.disconnect()\n        }\n    }\n\n    render(){\n        return(\n            <br/>\n        )\n    }\n}\n\nexport default Socket","import React, {useState} from 'react'\n\nexport default function GetName(props){\n    const [name, setName] = useState(\"Dafaq\")\n\n    let changeName = (e) => {\n        setName(e.target.value)\n    }\n\n    let submit = () =>{\n        props.setScoreBoard(prevScore => {\n            const nScore = [...prevScore]\n            nScore[0] = name\n            return nScore\n        })\n        props.setHaveName(true)\n    }\n\n    return(\n        <div className=\"flex flex-col rounded bg-pink-500 w-1/2 xl:w-1/3 items-center p-6 space-y-2\">\n            <div>\n                <p className=\"text-2xl\">What is your name?</p>\n            </div>\n            <div className=\"space-x-2\">\n                <input className=\"rounded px-1\" type=\"text\" name=\"UserName\" placeholder=\"Dafaq\" value={name} onChange={changeName} />\n                <button className=\"rounded bg-blue-300 w-24\" onClick={submit}>Submit</button>\n            </div>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport GameQuestion from './GameQuestion'\nimport Socket from './Socket'\nimport GetName from './GetName'\n\nfunction DuringGame(props){\n    const [quest, setQuest] = useState([])\n    const [yanswer, setYAnswer] = useState([])\n    const [scoreboard, setScoreBoard] = useState([\"user1\", \"user2\", 0, 0])\n    const [haveName, setHaveName] = useState(false)\n    const [done, setDone] = useState(false)\n\n    useEffect(() => {\n        const questionBank = [\"How did * get the name *?\",\"Where was * born?\",\"What sports/activities did * participate in while in highschool?\",\"Who does * look up to the most?\",\"What special day(s) does * celebrate that others do not?\",\"What are *'s hobbies?\",\"What accomplishments are * most proud of?\",\"If * were going to be on TV which show would * choose?\",\"What is *'s favorite show?\",\"If * could choose any country to go where would * go?\",\"How many bones has * broken?\",\"What size shoe does * wear?\",\"What is *'s favorite meal?\",\"Does * believe there is extraterrestrial life (aliens)?\",\"What languages does * know and if they know one which do they wish they could learn?\",\"If * could go to another time period and place to visit what would * choose?\",\"If * could go to another time period and place to live what would * choose?\",\"What is *'s favorite exercise?\",\"Which animal does *'s personality most resemble?\",\"If * could have any super power which would * choose?\",\"What does * talk about most often?\",\"How often does * brag about acts of kindness they do?\",\"What topics can * talk about comfortably for hours?\",\"What is *'s favorite ice cream flavor?\",\"What is *'s favorite genre of music?\",\"What is *'s favorite song?\",\"What is *'s favorite climate?\",\"Has * met someone famous and if so who?\",\"What is the scariest thing * has done?\",\"What is the greatest obstacle * has overcome?\",\"How did * decide their profession?\",\"What is *'s most cherished possession?\",\"If * could have only three possessions on an island what would * choose?\",\"What are all the places * has lived?\",\"Which relative does * resemble the most?\",\"What personality and habits does * share with other relatives?\",\"What is *'s favorite family dish?\",\"How did *'s parents choose *'s name?\",\"Does * share a name with another relative?\",\"Who is *'s most famous relative?\",\"What is *'s most important family holiday?\",\"Who is *'s oldest relative?\"]\n        const questionNumbers = props.match.params.gameId.split(\"-\")\n        const questions = questionNumbers.map(num => ({question: questionBank[num], answer: \"\"}))\n        setQuest(questions)\n        const nYAnswer = []\n        for (let i = 0; i < questions.length; i++){\n            nYAnswer.push({answer: \"\", oright:false})\n        }\n        setYAnswer(nYAnswer)\n    }, [])\n\n    useEffect(() => {\n        let total = 0\n        for (let i = 0; i < yanswer.length; i++){\n            total += yanswer[i].oright ? 1 : 0\n        }\n        setScoreBoard(prevVal => {\n            let nArr = [...prevVal]\n            nArr[3] = total\n            return nArr\n        })\n    }, [yanswer]);\n\n    let userAnswer = (string, index) => {\n        setYAnswer(prevAnswer => {\n            const newArr = [...prevAnswer]\n            newArr[index]['answer'] = string\n            return newArr\n        })\n    }\n\n    let userOAnswer = (value, index) => {\n        setYAnswer(prevAnswer => {\n            const newArr = [...prevAnswer]\n            newArr[index]['oright'] = value\n            return newArr\n        })\n    }\n\n    let doneWithGame = () => {\n        setDone(true)\n    }\n\n    return(\n        <div className=\"flex flex-col items-center space-y-4 m-4 w-full\">\n            {!haveName && <GetName setHaveName={setHaveName} setScoreBoard={setScoreBoard}/>}\n            <div className=\"flex flex-row justify-evenly flex-wrap space-x-1 space-y-2\">\n                {(haveName && !done ) && quest.map((item, index) => (\n                    <GameQuestion question={item.question} answer={item.answer} other={scoreboard[1]} index={index} key={index} changeAnswer={userAnswer} changeOright={userOAnswer} yanswer={yanswer}/>\n                    ))}\n            </div>\n            {(haveName && !done ) && <Socket yanswer={yanswer} name={scoreboard[0]} room={props.match.params.gameId} setQuest={setQuest} setScore={setScoreBoard}/>}\n            {(haveName && !done) && <button className=\"rounded text-3xl md:w-1/3 w-1/2 h-20 bg-pink-500\"onClick={doneWithGame}>Done</button>}\n            {done && <div className=\"flex flex-col items-center bg-pink-500 md:w-1/3 w-1/2 h-32 rounded text-3xl justify-evenly\"><h1>Your Score: {scoreboard[2]}</h1><h1>{scoreboard[1]}: {scoreboard[3]}</h1></div>}\n        </div>\n    )\n}\n\nexport default DuringGame","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport './App.css';\nimport About from './components/About/About'\nimport PreGame from './components/Game/PreGame'\nimport DuringGame from './components/Game/DuringGame'\n\nfunction App() {\n  return (\n    <main className=\"flex flex-col items-center\">\n      <BrowserRouter>\n        <Route exact path=\"/\" component={About}/>\n        <Route exact path=\"/game\" component={PreGame}/>\n        <Route path=\"/game/:gameId\" component={DuringGame}/>\n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}